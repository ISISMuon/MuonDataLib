name: Build and upload to PyPI

on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
      - 'main'

  pull_request_review:
    types: [submitted]
permissions:
  contents: write

jobs:
  update_version:
    name: update version
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Update version on merge
        run:  |
            python tools/version.py "beta"
      - name: Store changes
        uses: actions/upload-artifact@v3
        with:
          path: |
            ./pyproject.toml
            ./setup.py

  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    needs: [update_version]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - uses: actions/download-artifact@v3
        with:
          name: pyproject

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.0
        env:
          # List of platforms to build on (incl. Python version)
          CIBW_BUILD: cp3{9,10,11}-manylinux_x86_64 cp3{9,10,11}-win_amd64 cp3{9,10,11}-macosx_arm64

          CIBW_BEFORE_BUILD: >
             pip install numpy Cython
          # Install test dependencies and run tests
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: >
            pytest {project}/test
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: pyproject

      - name: Build sdist
        run: |
          pip install numpy Cython
          python setup.py sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  update_setup:
    needs: [upload_pypi]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          repository: ${{github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/download-artifact@v3
        with:
          name: pyproject
      - name: check
        run: |
          cat pyproject.toml
          echo ${{github.event.pull_request.head.repo.full_name }}
      - name: Commit on merge
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add pyproject.toml
          git commit -m "update version number"
          git push
